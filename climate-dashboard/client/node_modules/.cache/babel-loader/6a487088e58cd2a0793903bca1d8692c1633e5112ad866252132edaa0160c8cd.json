{"ast":null,"code":"var _jsxFileName = \"/home/mahim00zz/Climate_Aware/climate-dashboard/client/src/components/ConfigDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { get } from '@vercel/edge-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchEdgeConfigValue = async key => {\n  console.log(`Fetching config for ${key}...`);\n  try {\n    const value = await get(key);\n    console.log('Config value fetched:', value); // Log the response to check the value\n    return value;\n  } catch (error) {\n    console.log('Error fetching config:', error); // Log any error that might occur\n  }\n};\nconst ConfigDisplay = () => {\n  _s();\n  const [configValue, setConfigValue] = useState(\"Test Value\");\n  useEffect(() => {\n    // Simulate a successful API call with a delay (optional)\n    setTimeout(() => {\n      setConfigValue(\"Fetched Config Value!\");\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Config Value: \", configValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigDisplay, \"d08ohejxLYncV5629bze3Iz4f/I=\");\n_c = ConfigDisplay;\nexport default ConfigDisplay;\nvar _c;\n$RefreshReg$(_c, \"ConfigDisplay\");","map":{"version":3,"names":["React","useState","useEffect","get","jsxDEV","_jsxDEV","fetchEdgeConfigValue","key","console","log","value","error","ConfigDisplay","_s","configValue","setConfigValue","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mahim00zz/Climate_Aware/climate-dashboard/client/src/components/ConfigDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { get } from '@vercel/edge-config';\n\nconst fetchEdgeConfigValue = async (key) => {\n  console.log(`Fetching config for ${key}...`);\n  try {\n    const value = await get(key);\n    console.log('Config value fetched:', value);  // Log the response to check the value\n    return value;\n  } catch (error) {\n    console.log('Error fetching config:', error); // Log any error that might occur\n  }\n};\n\nconst ConfigDisplay = () => {\n  const [configValue, setConfigValue] = useState(\"Test Value\");\n\n  useEffect(() => {\n    // Simulate a successful API call with a delay (optional)\n    setTimeout(() => {\n      setConfigValue(\"Fetched Config Value!\");\n    }, 2000);\n  }, []);\n\n  return (\n    <div>\n      <h1>Config Value: {configValue}</h1>\n    </div>\n  );\n};\n\n\nexport default ConfigDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,oBAAoB,GAAG,MAAOC,GAAG,IAAK;EAC1CC,OAAO,CAACC,GAAG,CAAC,uBAAuBF,GAAG,KAAK,CAAC;EAC5C,IAAI;IACF,MAAMG,KAAK,GAAG,MAAMP,GAAG,CAACI,GAAG,CAAC;IAC5BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,KAAK,CAAC,CAAC,CAAE;IAC9C,OAAOA,KAAK;EACd,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEE,KAAK,CAAC,CAAC,CAAC;EAChD;AACF,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,YAAY,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACAc,UAAU,CAAC,MAAM;MACfD,cAAc,CAAC,uBAAuB,CAAC;IACzC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAAY,QAAA,GAAI,gBAAc,EAACH,WAAW;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACR,EAAA,CAfID,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAkBnB,eAAeA,aAAa;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}