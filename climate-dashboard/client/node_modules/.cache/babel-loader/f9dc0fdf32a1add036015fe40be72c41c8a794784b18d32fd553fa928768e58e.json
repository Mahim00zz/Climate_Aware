{"ast":null,"code":"var _jsxFileName = \"/home/mahim00zz/Climate_Aware/climate-dashboard/client/src/components/ConfigDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { get } from '@vercel/edge-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchEdgeConfigValue = async key => {\n  try {\n    const value = await get(key); // Get data from Vercel's Edge Config\n    console.log('Fetched value:', value); // Log the value for debugging\n    return value;\n  } catch (error) {\n    console.error('Error fetching config:', error);\n  }\n};\nconst ConfigDisplay = () => {\n  _s();\n  const [configValue, setConfigValue] = useState(null);\n  useEffect(() => {\n    const getConfig = async () => {\n      const value = await fetchEdgeConfigValue('db_connection_string');\n      console.log('Received config value:', value); // Log to ensure it was received\n      setConfigValue(value);\n    };\n    getConfig();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Config Value: \", configValue ? configValue : 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigDisplay, \"4JmfinZp6kayXK5Hu9JMLZhCYoA=\");\n_c = ConfigDisplay;\nexport default ConfigDisplay;\nvar _c;\n$RefreshReg$(_c, \"ConfigDisplay\");","map":{"version":3,"names":["React","useState","useEffect","get","jsxDEV","_jsxDEV","fetchEdgeConfigValue","key","value","console","log","error","ConfigDisplay","_s","configValue","setConfigValue","getConfig","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mahim00zz/Climate_Aware/climate-dashboard/client/src/components/ConfigDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { get } from '@vercel/edge-config';\n\nconst fetchEdgeConfigValue = async (key) => {\n  try {\n    const value = await get(key); // Get data from Vercel's Edge Config\n    console.log('Fetched value:', value); // Log the value for debugging\n    return value;\n  } catch (error) {\n    console.error('Error fetching config:', error);\n  }\n};\n\nconst ConfigDisplay = () => {\n  const [configValue, setConfigValue] = useState(null);\n\n  useEffect(() => {\n    const getConfig = async () => {\n      const value = await fetchEdgeConfigValue('db_connection_string');\n      console.log('Received config value:', value); // Log to ensure it was received\n      setConfigValue(value); \n    };\n\n    getConfig();\n  }, []);\n\n  return (\n    <div>\n      <h1>Config Value: {configValue ? configValue : 'Loading...'}</h1>\n    </div>\n  );\n};\n\nexport default ConfigDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,oBAAoB,GAAG,MAAOC,GAAG,IAAK;EAC1C,IAAI;IACF,MAAMC,KAAK,GAAG,MAAML,GAAG,CAACI,GAAG,CAAC,CAAC,CAAC;IAC9BE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC,CAAC,CAAC;IACtC,OAAOA,KAAK;EACd,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD;AACF,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMR,KAAK,GAAG,MAAMF,oBAAoB,CAAC,sBAAsB,CAAC;MAChEG,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC,CAAC,CAAC;MAC9CO,cAAc,CAACP,KAAK,CAAC;IACvB,CAAC;IAEDQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAAY,QAAA,GAAI,gBAAc,EAACH,WAAW,GAAGA,WAAW,GAAG,YAAY;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACR,EAAA,CAlBID,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAoBnB,eAAeA,aAAa;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}